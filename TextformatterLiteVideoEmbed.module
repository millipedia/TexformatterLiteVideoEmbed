<?php

/**
 * ProcessWire Lite Video Embed Module
 *
 * This textformatter replaces youTube links with Justin Ribeiro's web component
 * 
 * https://github.com/justinribeiro/lite-youtube/
 * 
 * Which I got to via Paul Irish's 
 * https://github.com/paulirish/lite-youtube-embed
 * 
 * for which jacmaes built a similar thing
 * https://github.com/jacmaes/TextformatterLiteYouTubeEmbed)
 * some of which is probably still in this version.
 *
 * Note: At the moment you need to add the TextFormatterVideoLiteEmbed.js manually, 
 * I must work out how we can do that.
 * 
 */

class TextformatterLiteVideoEmbed extends Textformatter
{
	public static function getModuleInfo()
	{
		return array(
			'title'     => __('Lite Video Embed'),
			'version'   => 001,
			'summary'   => __("Replaces plain video links in a text area or text input field with Justin Ribeiro's web component."),
			'author'    => 'millipedia',
		);
	}

	protected $ytl_added=0;

	/**
	 * Format the input string
	 *
	 * @param string $str The block of text to parse
	 *
	 * The incoming string is replaced with the formatted version of itself.
	 **/


	public function format(&$str)
	{

		// perform a quick check before moving on to the more expensive regex
		if (
			strpos($str, '://www.youtube.com/watch') === false
			&& strpos($str, '://www.youtube.com/v/') === false
			&& strpos($str, '://youtu.be/') === false
		) return;


		// TODO: - pull these params in from a config field.
		$lyt_params = '&modestbranding=2&rel=0&enablejsapi=1';


		// TODO: apply this both on html markup fields and single text fields.

		// regex to find YouTube link in a paragraph
		// TODO: do I have one for non-cookie domain somewhere? Sure I did... anyway we could use no-cookie in the markup as an option.

		// $regex = '#<p>\s*(https?://(?:www\.)?youtu(?:.be|be.com)+/(?:watch/?\?v=|v/)?([^\s&<\'"]+))(&[-_,.=&;a-zA-Z0-9]*)?.*?</p>#';

		// regex to find YT link in text field (rather than editor field).
		$regex = '#\s*(https?://(?:www\.)?youtu(?:.be|be.com)+/(?:watch/?\?v=|v/)?([^\s&<\'"]+))(&[-_,.=&;a-zA-Z0-9]*)?.*?#';

		if (preg_match_all($regex, $str, $matches) > 0) {

			foreach ($matches[0] as $key => $line) {

				// Alternative regex that also allows to find video ID:
				// https://gist.github.com/ghalusa/6c7f3a00fd2383e5ef33
				// preg_match('%(?:youtube(?:-nocookie)?\.com/(?:[^/]+/.+/|(?:v|e(?:mbed)?)/|.*[?&]v=)|youtu\.be/// )([^"&?/ ]{11})%i', $line, $match);
				// $video_id = $match[1];

				// Find video ID
				$video_id = $matches[2][$key];

				$lyt_markup=$this->component_markup($line, $video_id, $lyt_params);

				$str = str_replace($line, $lyt_markup, $str);

			}

		
		}

		// can we add our script to wire->config->scripts?
		// .... no. we can't. We can try adding inline but we don't have access to our nonce... hmmm.
		bd("adding sript");
		$str=$this->add_you_tube_script($str);

	}

	/**
	 * Wrap our video id in a lite-youtube tag.
	 */

	function component_markup($line, $video_id, $lyt_params){

		$lyt_markup = '';

		$lyt_markup .= '<lite-youtube videoid="' . $video_id . '" params="' . $lyt_params . '" >';
			// fallback for old browsers.
			$lyt_markup .= '<a class="lite-youtube-fallback" href="' . $line . $lyt_params . '">Watch on YouTube</a>';
		$lyt_markup .= '</lite-youtube>';

		return $lyt_markup;

	}

	/**
	 * Add the lite youtube script inline, and
	 * set a flag so we only load it once.
	 */
	function add_you_tube_script($str){


		$script='';

		// have we done this before?
		// $already_added=wire()->page->get('lyt_script_added');
		if (strpos($str, 'millco_lite_youtube')){
			return $str;
			bd("found script");
		}


		// if(!$already_added){
		// 	// and set a flag so we know we've already added it.
		// 	wire()->page->set('lyt_script_added', 1);
		// }

		// if not then load the script into a string


		// do we have a nonce to add to our scripts?
		if(wire()->page->get('nonce')) {
			$nonce=' nonce="' . wire()->page->get('nonce') .'" ';
		};

		$ylt_script=(dirname(__FILE__)."/TextformatterLiteVideoEmbed.js");

		if(file_exists($ylt_script)){
			$script='<script id="millco_lite_youtube" ' . $nonce . ' type="module">';
				$script.=file_get_contents($ylt_script);
			$script.='</script>';


		}else{
			$script.='file not found';
		}

		return $str.$script;
	}
}
